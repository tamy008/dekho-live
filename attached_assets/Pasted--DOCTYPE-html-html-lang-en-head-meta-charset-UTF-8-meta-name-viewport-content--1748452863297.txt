<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dekho - Discover Amazing Products</title>
    <meta name="description" content="Discover amazing products with our innovative platform featuring cutting-edge 3D effects and immersive experiences.">
    <meta name="keywords" content="products, discovery, 3D, interactive, shopping, platform">
    <meta name="author" content="Dekho Team">
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://dekho-live.vercel.app/">
    <meta property="og:title" content="Dekho - Discover Amazing Products">
    <meta property="og:description" content="Discover amazing products with our innovative platform featuring cutting-edge 3D effects and immersive experiences.">
    <meta property="og:image" content="https://dekho-live.vercel.app/dekho-logo.png">

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:url" content="https://dekho-live.vercel.app/">
    <meta property="twitter:title" content="Dekho - Discover Amazing Products">
    <meta property="twitter:description" content="Discover amazing products with our innovative platform featuring cutting-edge 3D effects and immersive experiences.">
    <meta property="twitter:image" content="https://dekho-live.vercel.app/dekho-logo.png">

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/favicon-large.png">
    
    <!-- Manifest -->
    <link rel="manifest" href="/manifest.json">
    <meta name="theme-color" content="#0f0f23">
    
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    
    <!-- Performance optimizations -->
    <link rel="dns-prefetch" href="//fonts.googleapis.com">
    <link rel="dns-prefetch" href="//fonts.gstatic.com">
    
    <!-- Critical CSS would be inlined here in production -->
    <style>
        /* Critical above-the-fold styles */
        body {
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #0f0f23;
            color: #ffffff;
            line-height: 1.6;
            overflow-x: hidden;
        }
        
        .loading-screen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: #0f0f23;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
        }
        
        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 3px solid rgba(255, 255, 255, 0.1);
            border-top: 3px solid #6366f1;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div id="root">
        <div class="loading-screen">
            <div class="loading-spinner"></div>
        </div>
    </div>
    
    <!-- Performance monitoring -->
    <script>
        // Basic performance monitoring
        window.addEventListener('load', function() {
            if ('performance' in window) {
                const perfData = performance.getEntriesByType('navigation')[0];
                console.log('Page load time:', perfData.loadEventEnd - perfData.loadEventStart, 'ms');
            }
        });
        
        // Remove loading screen when React app loads
        window.addEventListener('DOMContentLoaded', function() {
            setTimeout(function() {
                const loadingScreen = document.querySelector('.loading-screen');
                if (loadingScreen) {
                    loadingScreen.style.opacity = '0';
                    loadingScreen.style.transition = 'opacity 0.3s ease';
                    setTimeout(() => loadingScreen.remove(), 300);
                }
            }, 1000);
        });
    </script>
</body>
</html>
